#!/usr/bin/env python

###
### This file is generated automatically by SALOME v9.8.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
import salome_notebook
notebook = salome_notebook.NoteBook()
sys.path.insert(0, r'/home/gbornia/software/femus/applications/OptimalControl/01_boundary_control_inequality/00_dirichlet/02_dirichlet_lifting_external/input')

####################################################
##       Begin of NoteBook variables section      ##
####################################################
notebook.set("l_x", 1)
notebook.set("l_y", 1)
notebook.set("x_b", 0)
notebook.set("x_e", "x_b + l_x")
notebook.set("y_b", 0)
notebook.set("y_e", "y_b + l_y")
notebook.set("z_b", 0)
notebook.set("z_e", 0)
notebook.set("ext_l_x", 0.25)
notebook.set("ext_l_y", 0.5)
notebook.set("ext_x_b", "x_e")
notebook.set("ext_x_e", "ext_x_b + ext_l_x")
notebook.set("ext_y_b_delta_from_y_b", 0.35)
notebook.set("ext_y_b", "y_b + ext_y_b_delta_from_y_b")
notebook.set("ext_y_e", "ext_y_b + ext_l_y")
notebook.set("ext_n_x", 1)
notebook.set("ext_n_y", 2)
notebook.set("n_x", 2)
notebook.set("n_y_lower", 1)
notebook.set("n_y_center", "ext_n_y")
notebook.set("n_y_upper", 1)
####################################################
##        End of NoteBook variables section       ##
####################################################


###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS


geompy = geomBuilder.New()

O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
Vertex_1 = geompy.MakeVertex("x_b", "y_b", "z_b")
Vertex_2 = geompy.MakeVertex("x_b", "y_e", 0)
Vertex_3 = geompy.MakeVertex("x_e", "y_b", 0)
Vertex_4 = geompy.MakeVertex("x_e", "y_e", 0)
Line_1 = geompy.MakeLineTwoPnt(Vertex_1, Vertex_3)
Line_2 = geompy.MakeLineTwoPnt(Vertex_3, Vertex_4)
Line_3 = geompy.MakeLineTwoPnt(Vertex_4, Vertex_2)
Line_4 = geompy.MakeLineTwoPnt(Vertex_2, Vertex_1)
Face_1 = geompy.MakeFaceWires([Line_1, Line_2, Line_3, Line_4], 1)
[Edge_1,Edge_2,Edge_3,Edge_4] = geompy.ExtractShapes(Face_1, geompy.ShapeType["EDGE"], True)
Vertex_5 = geompy.MakeVertex("ext_x_b", "ext_y_b", 0)
Vertex_6 = geompy.MakeVertex("ext_x_e", "ext_y_b", 0)
Vertex_7 = geompy.MakeVertex("ext_x_e", "ext_y_e", 0)
Vertex_8 = geompy.MakeVertex("ext_x_b", "ext_y_e", 0)
Line_5 = geompy.MakeLineTwoPnt(Vertex_5, Vertex_6)
Line_6 = geompy.MakeLineTwoPnt(Vertex_6, Vertex_7)
Line_7 = geompy.MakeLineTwoPnt(Vertex_7, Vertex_8)
Line_5_vertex_2 = geompy.GetSubShape(Line_5, [2])
Line_8 = geompy.MakeLineTwoPnt(Vertex_8, Line_5_vertex_2)
Face_2 = geompy.MakeFaceWires([Line_5, Line_6, Line_7, Line_8], 1)
[Edge_5,Edge_6,Edge_7,Edge_8] = geompy.ExtractShapes(Face_2, geompy.ShapeType["EDGE"], True)
geomObj_1 = geompy.MakeVertex(0, 0, 0)
geomObj_2 = geompy.MakeVectorDXDYDZ(1, 0, 0)
geomObj_3 = geompy.MakeVectorDXDYDZ(0, 1, 0)
geomObj_4 = geompy.MakeVectorDXDYDZ(0, 0, 1)
geomObj_5 = geompy.MakeVertex(0, 0, 0)
geomObj_6 = geompy.MakeVertex(0, 1, 0)
geomObj_7 = geompy.MakeVertex(1, 0, 0)
geomObj_8 = geompy.MakeVertex(1, 1, 0)
geomObj_9 = geompy.MakeLineTwoPnt(geomObj_5, geomObj_7)
geomObj_10 = geompy.MakeLineTwoPnt(geomObj_7, geomObj_8)
geomObj_11 = geompy.MakeLineTwoPnt(geomObj_8, geomObj_6)
geomObj_12 = geompy.MakeLineTwoPnt(geomObj_6, geomObj_5)
geomObj_13 = geompy.MakeFaceWires([geomObj_9, geomObj_10, geomObj_11, geomObj_12], 1)
[geomObj_14,geomObj_15,geomObj_16,geomObj_17] = geompy.ExtractShapes(geomObj_13, geompy.ShapeType["EDGE"], True)
geomObj_18 = geompy.MakeVertex(1, 0.25, 0)
geomObj_19 = geompy.MakeVertex(1.25, 0.25, 0)
geomObj_20 = geompy.MakeVertex(1.25, 0.75, 0)
geomObj_21 = geompy.MakeVertex(1, 0.75, 0)
geomObj_22 = geompy.MakeLineTwoPnt(geomObj_18, geomObj_19)
geomObj_23 = geompy.MakeLineTwoPnt(geomObj_19, geomObj_20)
geomObj_24 = geompy.MakeLineTwoPnt(geomObj_20, geomObj_21)
geomObj_25 = geompy.GetSubShape(geomObj_22, [2])
geomObj_26 = geompy.MakeLineTwoPnt(geomObj_21, geomObj_25)
geomObj_27 = geompy.MakeFaceWires([geomObj_22, geomObj_23, geomObj_24, geomObj_26], 1)
[geomObj_28,geomObj_29,geomObj_30,geomObj_31] = geompy.ExtractShapes(geomObj_27, geompy.ShapeType["EDGE"], True)
geomObj_32 = geompy.MakeFuseList([geomObj_13, geomObj_27], True, True)
geomObj_33 = geompy.MakeVertex(0, 0.75, 0)
geomObj_34 = geompy.MakeVertex(0, 0.25, 0)
Vertex_9 = geompy.MakeVertex("x_b", "ext_y_b", 0)
Vertex_10 = geompy.MakeVertex("x_b", "ext_y_e", 0)
Line_9 = geompy.MakeLineTwoPnt(Vertex_9, Vertex_5)
Line_10 = geompy.MakeLineTwoPnt(Vertex_8, Vertex_10)
Fuse_1 = geompy.MakeFuseList([Face_1, Face_2], True, True)
Partition_1 = geompy.MakePartition([Fuse_1], [Line_8, Line_9, Line_10], [], [], geompy.ShapeType["FACE"], 0, [], 0)
[Face_3,Face_4,Face_5,Face_6] = geompy.ExtractShapes(Partition_1, geompy.ShapeType["FACE"], True)
[Edge_9,Edge_10,Edge_11,Edge_12,Edge_13,Edge_14,Edge_15,Edge_16,Edge_17,Edge_18,Edge_19,Edge_20,Edge_21] = geompy.ExtractShapes(Partition_1, geompy.ShapeType["EDGE"], True)
[Face_3, Face_4, Face_5, Face_6, Edge_9, Edge_10, Edge_11, Edge_12, Edge_13, Edge_14, Edge_15, Edge_16, Edge_17, Edge_18, Edge_19, Edge_20, Edge_21] = geompy.GetExistingSubObjects(Partition_1, False)
[Face_3, Face_4, Face_5, Face_6, Edge_9, Edge_10, Edge_11, Edge_12, Edge_13, Edge_14, Edge_15, Edge_16, Edge_17, Edge_18, Edge_19, Edge_20, Edge_21] = geompy.GetExistingSubObjects(Partition_1, False)
[Face_3, Face_4, Face_5, Face_6, Edge_9, Edge_10, Edge_11, Edge_12, Edge_13, Edge_14, Edge_15, Edge_16, Edge_17, Edge_18, Edge_19, Edge_20, Edge_21] = geompy.GetExistingSubObjects(Partition_1, False)
[Face_3, Face_4, Face_5, Face_6, Edge_9, Edge_10, Edge_11, Edge_12, Edge_13, Edge_14, Edge_15, Edge_16, Edge_17, Edge_18, Edge_19, Edge_20, Edge_21] = geompy.GetExistingSubObjects(Partition_1, False)
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( Vertex_1, 'Vertex_1' )
geompy.addToStudy( Vertex_2, 'Vertex_2' )
geompy.addToStudy( Vertex_3, 'Vertex_3' )
geompy.addToStudy( Vertex_4, 'Vertex_4' )
geompy.addToStudy( Line_1, 'Line_1' )
geompy.addToStudy( Line_2, 'Line_2' )
geompy.addToStudy( Line_3, 'Line_3' )
geompy.addToStudy( Line_4, 'Line_4' )
geompy.addToStudy( Face_1, 'Face_1' )
geompy.addToStudyInFather( Face_1, Edge_1, 'Edge_1' )
geompy.addToStudyInFather( Face_1, Edge_2, 'Edge_2' )
geompy.addToStudyInFather( Face_1, Edge_3, 'Edge_3' )
geompy.addToStudyInFather( Face_1, Edge_4, 'Edge_4' )
geompy.addToStudy( Vertex_5, 'Vertex_5' )
geompy.addToStudy( Vertex_6, 'Vertex_6' )
geompy.addToStudy( Vertex_7, 'Vertex_7' )
geompy.addToStudy( Vertex_8, 'Vertex_8' )
geompy.addToStudy( Line_5, 'Line_5' )
geompy.addToStudy( Line_6, 'Line_6' )
geompy.addToStudy( Line_7, 'Line_7' )
geompy.addToStudyInFather( Line_5, Line_5_vertex_2, 'Line_5:vertex_2' )
geompy.addToStudy( Line_8, 'Line_8' )
geompy.addToStudy( Face_2, 'Face_2' )
geompy.addToStudyInFather( Face_2, Edge_5, 'Edge_5' )
geompy.addToStudyInFather( Face_2, Edge_6, 'Edge_6' )
geompy.addToStudyInFather( Face_2, Edge_7, 'Edge_7' )
geompy.addToStudyInFather( Face_2, Edge_8, 'Edge_8' )
geompy.addToStudy( Vertex_9, 'Vertex_9' )
geompy.addToStudy( Vertex_10, 'Vertex_10' )
geompy.addToStudy( Line_9, 'Line_9' )
geompy.addToStudy( Line_10, 'Line_10' )
geompy.addToStudy( Fuse_1, 'Fuse_1' )
geompy.addToStudy( Partition_1, 'Partition_1' )
geompy.addToStudyInFather( Partition_1, Face_3, 'Face_3' )
geompy.addToStudyInFather( Partition_1, Face_4, 'Face_4' )
geompy.addToStudyInFather( Partition_1, Face_5, 'Face_5' )
geompy.addToStudyInFather( Partition_1, Face_6, 'Face_6' )
geompy.addToStudyInFather( Partition_1, Edge_9, 'Edge_9' )
geompy.addToStudyInFather( Partition_1, Edge_10, 'Edge_10' )
geompy.addToStudyInFather( Partition_1, Edge_11, 'Edge_11' )
geompy.addToStudyInFather( Partition_1, Edge_12, 'Edge_12' )
geompy.addToStudyInFather( Partition_1, Edge_13, 'Edge_13' )
geompy.addToStudyInFather( Partition_1, Edge_14, 'Edge_14' )
geompy.addToStudyInFather( Partition_1, Edge_15, 'Edge_15' )
geompy.addToStudyInFather( Partition_1, Edge_16, 'Edge_16' )
geompy.addToStudyInFather( Partition_1, Edge_17, 'Edge_17' )
geompy.addToStudyInFather( Partition_1, Edge_18, 'Edge_18' )
geompy.addToStudyInFather( Partition_1, Edge_19, 'Edge_19' )
geompy.addToStudyInFather( Partition_1, Edge_20, 'Edge_20' )
geompy.addToStudyInFather( Partition_1, Edge_21, 'Edge_21' )


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser()
